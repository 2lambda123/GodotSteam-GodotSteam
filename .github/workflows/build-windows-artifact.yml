on:
  workflow_call:
    inputs:
      godot_tag:
        required: true
        type: string
      mono_tag:
        required: true
        type: string
      steamworks_sdk_tag:
        required: true
        type: string
      windows_version:
        required: true
        type: string
    secrets:
      steamworks_sdk_repo:
        required: true
      steamworks_sdk_repo_token:
        required: true


jobs:
  build-windows:
    runs-on: windows-latest

    name: Windows ${{ matrxi.name }}
    
    env:
      SCONSFLAGS: mono_static=yes

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor and Templates (64-bit)
            bits: 32
            build-mono: false
            cache-name: windows64
            editor_name: godot.windows.editor.x86_64.exe
            editor_name_new: godotsteam.multiplayer.${{ env.GODOT_VERSION }}.editor.windows.64.exe
            steam_redist: steam_api64.dll
            steam_redist_bin: win64/

          -name: Editor and Templates (32-bit)
            bits: 64
            build-mono: false
            cache-name: windows32
            editor_name: godot.windows.editor.x86_32.exe
            editor_name_new: godotsteam.multiplayer.${{ env.GODOT_VERSION }}.editor.windows.32.exe
            steam_redist: steam_api.dll
            steam_redist_bin: ""

    steps:
      - uses: actions/checkout@v4

      # Download Godot to start
      - name: Download Godot
        uses: ./.github/actions/download-godot
        with:
          version: ${{ inputs.godot_tag }}

      # Preempt the missing bin folder
      - name: Preempt missing Bin Folder
        shell: bash
        run: |
          mkdir ./bin/

      # Download GodotSteam
      - name: Download GodotSteam
        uses: ./.github/actions/download-godotsteam

      # Download Steamworks SDK
      - name: Download Steamworks SDK
        uses: ./.github/actions/download-steamworks
        with:
          path: "steamworks"
          repository: ${{ secrets.steamworks_sdk_repo }}
          token: ${{ secrets.steamworks_sdk_repo_token }}
          ref: ${{ inputs.steamworks_sdk_tag }}

      # Download GodotSteam Multiplayer Peer
      - name: Download GodotSteam Multiplayer Peer
        uses: ./.github/actions/download-godotsteam-multiplayer
        with:
          path: "godotsteammultiplayer"

      # Get that cache money
      - name: Setup Build Cache
        uses: ./.github/actions/setup-cache
        with:
          cache-name: ${{ matrix.cache-name }}
          godot-base: inputs.godot_tag
        continue-on-error: true

      # Setup Python and SCONS
      - name: Setup Python and SCONS
        uses: ./.github/actions/setup-dependencies

      # Compiling editor
      - name: ${{ matrix.bits }}-bit Editor Compilation
        uses: ./.github/actions/build-godot
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} bits=${{ matrix.bits }}
          platform: windows
          target: editor
          binary: ${{ matrix.editor_name }}
          export: ${{ matrix.editor_name_new }}

      - name: Upload ${{ matrix.bits }}-bit Editor
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}-editor
          path: ./bin/${{ matrix.editor_name_new }}

      - name: Clear bin
        shell: bash
        run: |
          rm -rf bin

      # Compiling templates
      - name: ${{ matrix.bits }}-bit Debug Template Compilation (target=template_debug)
        uses: ./.github/actions/build-godot
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} bits=${{ matrix.bits }}
          platform: windows
          target: template_debug
          binary: ${{ matrix.debug_name }}
          export: ${{ matrix.debug_name_new }}

      - name: Upload ${{ matrix.bits }}-bit Debug Template
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}-debug-template
          path: ./bin/${{ matrix.debug_name_new }}

      - name: ${{ matrix.bits }}-bit Release Template Compilation (target=template_release)
        uses: ./.github/actions/build-godot
        with:
          sconsflags: ${{ env.SCONSFLAGS }} ${{ matrix.sconsflags }} bits=${{ matrix.bits }} debug_symbols=no
          platform: windows
          target: template_release
          binary: ${{ matrix.release_name }}
          export: ${{ matrix.release_name_new }}

      - name: Upload ${{ matrix.bits }}-bit Release Template
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}-release-template
          path: ./bin/${{ matrix.release_name_new }}

      - name: Clear bin
        shell: bash
        run: |
          rm -rf bin

      # Upload the Steam redistributable for packaging
      - name: Upload Windows ${{ matrix.bits}}-bit Steam File
        uses: ./.github/actions/upload-steam-redistributable
        with:
          name: windows${{ matrix.bits }}-steam
          path: ${{ matrix.steam_redist_bin }}
          redist: ${{ matrix.steam_redist }}
